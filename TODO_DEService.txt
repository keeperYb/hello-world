-------------------------WORKS
- table_dict.txt 完整配置表,  database/word_table_dict_helper.py
	- 完成excel的所有配置,(使其成为元数据)
	- 绕太长, 可能要配一个view, 当做原来的xls
-** word拼接导出, 可以用新的 docx-tpl, jinja2 ? B站: python-docx
	- 完成 section 的excel对照表  D:\PythonWork\demos\outer_resource\xls\word_section_contents.xlsx
	- 优化, session 何时引入, physical_node_id怎么获取
-* AdbHelper 注意改一下, 不要把对返回值的判断写死...
- 导出pad : de_evaluation_detail(逻辑可能还有点问题...)
- 临时的文件tmp要用不会重复的名字
-** 合并数据库, 模式设计? 
	- 合并数据库不是把改过的东西全部merge那么简单
- 另外2个地方的申报导入: assign_task.py
-*? group_bl node 不能用first()取, 用all()取, 
- 申报导入记录, 新增数据库表:
-...  部署方式研究: docker (service)
CREATE TABLE [de_declare_import_log](
    [id] INT64, 
    [declare_id] int64, --de_declare.id   
    [import_date] varchar(50), --导入时间
    [times] INT, --第几次导入
    [row_status] TINYINT DEFAULT 1, 
    [create_by] INT64, 
    [create_time] TIMESTAMP DEFAULT (DATETIME ('now', 'localtime')), 
    [create_device] varchar(50), 
    [update_by] INT64, 
    [update_time] TIMESTAMP DEFAULT (DATETIME ('now', 'localtime')), 
    [update_device] varchar(50), 
    [s_time] TIMESTAMP DEFAULT (DATETIME ('now', 'localtime'))
    );
    
--现场测评任务导入(组长/组员)    
CREATE TABLE [de_evaluation_task_import_log](
    [id] INT64, 
    [evaluation_task_id] int64, --de_evaluation_task.id   
    [import_date] varchar(50), --导入时间
    [times] INT, --第几次导入
    [groups] varchar(50), --组员导入的分组，组长导入此栏位置空
    [row_status] TINYINT DEFAULT 1, 
    [create_by] INT64, 
    [create_time] TIMESTAMP DEFAULT (DATETIME ('now', 'localtime')), 
    [create_device] varchar(50), 
    [update_by] INT64, 
    [update_time] TIMESTAMP DEFAULT (DATETIME ('now', 'localtime')), 
    [update_device] varchar(50), 
    [s_time] TIMESTAMP DEFAULT (DATETIME ('now', 'localtime'))
    );  
	
- group_bl 合并时最好取出一条merge一条, 最后commit全部
-? PAD, CLI合并时, 增加判断条件(group_bl.py)
	- 详情见笔记本下标页: 数据库合并情况
- 下载图片list, 从ser到pad

- super_group 新增判断: super_group不重复, 人员不重复?...
- 解析HTML, 填到附件 附录1-1 > 附录1-3 的漏洞扫描表中
- 完成DeService所有的api-bll-dao基本框架
	- Extra: 身份鉴别, 要提供不一样的api...
- DEService, 可参考 PythonWork/TopoService
	- 数据验证
	- 授权
-. 最终打包
	
- 数据库层级划分:
	- 由于数据库层级划分变化, 现在用physical_node_id 替代report_id...
	- 报告report >> 节点node >> 物理环境physical_node >> 其他

-------------------------WONDERS
-? dao动态filter个数
- dal不处理异常, 交给bll处理...?
-** 面向对象, 测试, 数据库设计
-* python virtualenv(实用工具)
-? * 怎么简洁地取出一个记录中的数值?
-? 需要一个强有力, 又不至于越俎代庖的BaseDao!!!
-? 一会儿用 bytes 类型能传, 一会儿和 Form 就 UploadFile 能传...
-. 返回FileResponse: evaluation_from_server, 怎么存到cli的硬盘上? 最后还是用了StreamingResponse, cli读取streaming_response.content--一个file-like obj
-? 使用方法怎么方便的测试?
-? NoneType.xx 调用应该怎么处理??
-? bll 要取出一个orm对象值(value of obj)的操作?
-? fastapi这么多router干什么的...
-? 合理运用database view 来减少 query的复杂度?
-? 公共类(Helper) 和 父类(Base)... 什么时候用什么? 子类同名函数, 应该和父类同名函数保持参数一致...
-? typing.List 和 list 有什么不同??
-? BaseDao(BasicDao) 设计明显可以再改进...
-! bll 不应该包办太多(说的是生成view_model_obj), 违反了单一职责原则
-? json的int型好像长度不够...1352904933892038700 失真了
-? try-except应该在哪一层? 底层, 底层上一层??
-? session到底应该放在那一层?? 应该在list的for循环中还是之后执行commit??
-? 项目中的de_report_image 不能继承BaseNodePageModel, 是为什么
-? cwd(current working directory)在打包好的程序中是否也有效?
-? bll 临时用到的特定pydantic_model放在哪一层比较好
-? Rebasing published commit
	- You're trying to rebase some commits already pushed to a portected branch.
	- Rebasing them would duplicate commits, which is not recommended and most likely unwanted.
-? sqlite3.OperationalError: no such table: de_detection_template
?? you're trying to rebase some commits already pushed to a portected branch
-? 一些有强相关性的代码(例如:SystemInfo, SystemInfoView, SystemInfoViewCreate)要怎么同步更新...
-? 在两张db表中使用了同一个属性--类似于链接, 这种应该怎么实现这个属性的crud
-? class DeDeclareView(BaseView) 检查属性是否必填是在类创建的时候??
	- 使用一个DeDeclareViewCreator [用于给一些默认值...]

------------------------------------------api-bll-dao基本框架, 基本流程

- auto, 在routers中注册 (自动化, 向特定的标签的前一行加指定内容), 编写api, bll, dal(list // detail, save)
- auto, 更新view_orm_dict 和 viewcreate_orm_dict(utils.io_helpers.py/ TransferHelper)
- auto, 编写api, bll, dal(list // detail, save)
以上三步(其实是一键完成的), 执行auto_code _auto_code_main, 更改ENG_NAME 和CHN_NAME即可

- auto, 确定model(model_orm.py), view(view.shared_view.py), viewcreate(view.shared_view.py)
复制orm_class到 杂物/input, 执行 杂物/1_transfer_orm_to_view.py, 从output复制到相应位置即可