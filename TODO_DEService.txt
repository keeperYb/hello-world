-------------------------WORKS
- file update, the form in FastAPI...
- 完成DeService所有的api-bll-dao基本框架
	- Extra: 身份鉴别, 要提供不一样的api...
- 所有的api-bll-dao基本框架api，描述还没写
- 数据库修改:
	- de_report_application: app_info(系统名称,版本)
- DEService, 可参考 PythonWork/TopoService
	- 数据验证
	- 授权
- database自行计算绝对路径(todo)
- 数据库层级划分:
	- 由于数据库层级划分变化, 现在用physical_node_id 替代report_id...
	- 报告report >> 节点node >> 物理环境physical_node >> 其他

-------------------------WONDERS
-? sqlite3.OperationalError: no such table: de_detection_template
?? you're trying to rebase some commits already pushed to a portected branch
-? 一些有强相关性的代码(例如:SystemInfo, SystemInfoView, SystemInfoViewCreate)要怎么同步更新...
-? 在两张db表中使用了同一个属性--类似于链接, 这种应该怎么实现这个属性的crud
-? class DeDeclareView(BaseView) 检查属性是否必填是在类创建的时候??
	- 使用一个DeDeclareViewCreator [用于给一些默认值...]
- 将DeSystem 的导入excel template 转到 DeService中
	- uvicorn.run(app=app, host="0.0.0.0", port=5000)  # ? 四个0 代表动态分配ip?
-? 手动配置步骤... 能写脚本生成代码?
	-打开原有的DeSystem, 确定在哪个section
	-找到这个section需要用的orm_model, 配置api_model
	-在/api/all_section_api.py写对应api_model的方法
	- NOW: 任务描述

------------------------------------------api-bll-dao基本框架, 基本流程
- auto, 在routers中注册 (自动化, 向特定的标签的前一行加指定内容)
- auto, 更新view_orm_dict 和 viewcreate_orm_dict(utils.io_helpers.py/ TransferHelper)
- auto, 编写api, bll, dal(list // detail, save)
以上三步, 执行auto_code _auto_code_main, 更改ENG_NAME 和CHN_NAME即可

- auto, 确定model(model_orm.py), view(view.shared_view.py), viewcreate(view.shared_view.py)
复制orm_class到 杂物/input, 执行 杂物/1_transfer_orm_to_view.py, 从output复制到相应位置即可