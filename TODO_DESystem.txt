DESystem_PC
? python-docx: 读取word中的图片 / 插入visio
? 格式 --excel的格式, db的格式
? xlrd 处理合并的单元格?? 合并的单元格, 拆分出来要有东西... 能识别单元格合并吗?
? 多次导入, 解决问题的单元格依然还在, 是TableObj的问题
	- 难道dict 和 obj.param 由于 setattr 而连接起来了[不是因为setattr, 而是因为list, 变成引用传递了]
! 慎用 xx = list, 因为是引用传递...
! 初始化对象的时候, 还是老实用self.xx, 而不要在class里写成员变量. 因为class里的成员变量的生命周期是不可预期的...
. TypeError: SQLite Date type only accepts Python date objects as input. 那什么时候, 怎么处理excel-date?
	-读excel的时候就处理,格式错误时存入默认的古代日期
! return == return None ...
-----------------------------------------
- 自动操作复制模板docx文件, 然后删除docx文档的所有信息, 以此来获得模板里的所有样式格式
- 设定表格样式 [包括表格内容, 表格线]
- 修改 python-docx 自创的默认样式
 # set table style  # only useful in docx files which has default table styles
    styles = dcmt.styles
    table.style = 'LightShading'
-----------------------------------------
-导入全部excel测试阶段:
有问题的表格:
	?- 安全保密集成单位情况表_少一列:单位名称 3.1.17, unitType似乎要sortNo * 10...
	?- 安全保密管理人员情况表-3.1.15, 少一列:岗位职责, Post似乎要sortNo * 10...

-----------------------------------------

!- 设置useless_row/ 判断useless_row 都要改...
!- 看来要默认设一些SortNo...
	File "D:\PythonWork\DESystem_PC\MainWin\WordWindow\SinglePage\PageVulnerabilityOpinion.py", line 69, in showPageData
    exec("self.LineEditVulnerabilitySn{}.setText(model.VulnerabilitySn)".format(model.SortNo))
  File "<string>", line 1, in <module>
AttributeError: 'FrmVulnerabilityOpinion' object has no attribute 'LineEditVulnerabilitySnNone'


!- excel_sheet 中心节点, 各种'其他情况', 设在DeReportNode下, 注意ReportId, Id(nodeId) 的设置,确保是更新记录而不是新增记录

附加表的基本模板:
		'type': TableType.TWO_COLUMN,
        'name': '',
        'end_flag': '',
        'useless_rows': [],
        'value_list': [],
        'attrToSet_list': [		# 注意填写...
            '',
        ],
        'orm_class': DeReportNode,  # 小表都填到DeReportNode中去
        'is_header_name_useless': False,  # 小表没有表名, name是第一行
        'node_index': NodeIndex.CENTRAL_NODE,

- table_xx 基本模板: 
         'type': TableType.TWO_COLUMN,
        'name': '报告签批页',
        'end_flag': END_SYMBOL,
        'useless_rows': ['报告签批页'],
        'value_list': [],
        'attrToSet_list': [
            'SysName',
            'UseUnit',
            'DeResult',
            'TechnicalScore',
            'ManageScore',
            'ReviewResult',
            'ReviewDate',
            'ExamineResult',
            'ExamineDate',
            'ApprovedResult',
            'ApprovedDate',
        ],
        'field_checktype_list': [
            FieldCheckType.NO_CHECK_TYPE,  # 'SysName',
            FieldCheckType.NO_CHECK_TYPE,  # 'UseUnit',
            FieldCheckType.NO_CHECK_TYPE,  # 'DeResult',
            FieldCheckType.SCORE_TYPE,  # 'TechnicalScore',
            FieldCheckType.SCORE_TYPE,  # 'ManageScore',
            FieldCheckType.NO_CHECK_TYPE,  # 'ReviewResult',
            FieldCheckType.DATE_TYPE,  # 'ReviewDate',
            FieldCheckType.NO_CHECK_TYPE,  # 'ExamineResult',
            FieldCheckType.DATE_TYPE,  # 'ExamineDate',
            FieldCheckType.NO_CHECK_TYPE,  # 'ApprovedResult',
            FieldCheckType.DATE_TYPE,  # 'ApprovedDate',
        ],
        'field_obj_list': [],  # 存入field_obj_list对象
        'orm_class': Dexx,
        'cell_list': []  # excel 中对应的单元格的名字, 不用都写, 只有在需要错误检查的表中再填'

- 整体导入数据库的人员操作步骤:
	- 找到对应的excel
	- 根据表名称, 在database.py 中查找对应的ORM_class, 据此确定表的 alias_name
	- 在excel的相应位置标注 对应字段名称
	- 转到ExcelInfo 类中, 完成 tables_in_sheets 和 对应table_alias_name的配置
	- 转到ReportManage.py 进行测试, 现阶段不用commit到DB
	
	
	
	
	
- 整体存入数据库的步骤:
	- 选择一个excel
	- 读出其中的所有sheets
	- 根据ExcelInfo.tables_in_sheets, 
	
需要dict加几个属性: 
原来的widget输入改为excel导入, 进数据库

- 得到twoColumn-table的value-list 的过程:
	- 新建一个TableTwoColumn对象, 其中有:{table_name, sheet_index, attr_list}
	- getValueList
-------

=======
... 现在能得到行数
- 导入大型完整Excel的步骤:
	- FileDialog选择Excel
	- 根据一个SheetDict去选择sheetIndex
	- 根据ExcelName和SheetIndex 进入ExcelHelper
	- 得到完整的数据
	- ?? 数据显示在widget上

- 各小节对应的类和数据库
	- 报告签批页 FrmSignOff de_report_sign_off
	- 测评机构及委托方信息 FrmInstitutionClient 
			- 测评机构 de_report_institution
			- 委托方 de_report_client
	- 任务描述  FrmTaskDesc de_report_task_description
	- 第二部分  系统检测 FrmPart2
		- 1. 检测依据 FrmDetectionBasis 无db对应
		- 2. 检测工具 FrmDetectionTool  de_report_detection_tool
		- 3. 检测结果及得分 FrmEvaluationDetail 已经做好
		- 4. 检测意见 FrmDetectionOpinion 可能要更改表...


导入新的Excel表格大概流程(普通 m*n 表格):
	- 编辑excel模板, 序号不用
	- 编辑 .ui 文件, 加入pushButtonImport, 对 .UI文件 pyuic
	- initUi 加入 self.initPushButtonImport()
	-  def onImport(self):
        """button_import 点击事件"""
        unchangableColumns = [0]  # 没有前置列则设为[]
        super().handleImportClicked_table(tableWidget=self.tableWidget,
                                          ormModelType=Dexx,
                                          ormModelList=self._reportxx,
                                          unchangableColumns=unchangableColumns)
        pass
	- 编辑 itemChanged() 方法, 添加:
		if xx.NodeId is None:
            xx.NodeId = self.reportNode.Id



-----------------------------------------
像在qtdesigner里拖拽widget一样, 用户自由排布第一部分各小节的顺序
-----------------------------------------
合并word文档, 格式和给出的word模板一致
	- docx 直接生成和test.docx一致的格式...
	- 动态地添加/删除小节, 添加/删除表格

!! 用python-docx新建word文档, 而不要自行新建..



-----------------------------------------

在PC端打分
-- qt, treeWidget显示样式
-- 分数设置四位小数, 包括widget显示, DB存入  # 想要全局使用, 应该放在哪个模块
	-- 全局使用的模块: 显示--WidgetHelper, 存储到DB: XX_Dao
- ? basic_dao: setAttrAfterCreate, setAttrAfterUpdate
- ? ORM obj 类可以作为 dao 来使用吗...
- !!对象的list, 即使是list.copy()也没有用, 要用 copy.deepcopy(list)
 -----------------------------------------
DataSync.py	数据同步
同步数据库不完整
-----------------------------------------
***********************************************************************************
<<<<<<< HEAD
=======
Others:
------------------------------------
? Python Generator 对象是什么...
>>>>>>> 878da0a101b9267daa4f6971c3a4122e4031999b
------------------------------------
! 给对象属性赋值:
	                if column_names[column] in model_type.__dict__:
                    setattr(model, column_names[column], list_item[column])
------------------------------------
itemId = 1329607703529521154
taskId = 1327155104771612672
contentId = 1329607703529521152
# todo 暂时注释, 注意改回

start_time = time.time()

reportId = 1326339010297208833

        self.session.query(self.modelClass).
        filter(self.modelClass.MethodId = deMethod.Id,
        self.modelClass.TaskId == taskId).first()

