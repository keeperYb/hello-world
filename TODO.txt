------------------------------------------------------------------------------------------
今日日程: 2020-2-24
**********
VERY IMPORTANT !!
- SQLAlchemy Session (in web...)
- adb 测试的时候, 对三种pad测试(小米, E人E本未加密, E人E本已加密)
- FastAPI
- 合并之前先备份整个项目...
- 每天的工作, 简要记录
	- (周一)3-1: word文档拼接, 格式样式 
	- 3-2: word文档设置表格样式
	- 3-3: 完成内容填充模板
	- 3-4: 创建新的数据库, 将所有'内容填充模板'存入数据库
	- 3-5: 完成大部分(3/4)的小节输出, 剩余特殊表格格式待输出
**********
------------------------------------------------------------------------------------------Work
------------------------------------------------------------------------------------------Questions
-? 自评估情况汇总表 是否可以做成 mailmerge_list的形式, 而且第一列应用格式?
-?! 试一下...在git操作的时候, 先处理完local的, 再处理remote的(否则本地的无冲突修改会覆盖刚从remote端get到的内容...)	
-? (优雅地)用dict生成python_obj
-? reStructured comment style
-? save list into DataBase...
-! data persistence in Python
-! magic methods of python, in python_basic/NOTE_...  
-? python working with files - firefox Python
- demos: extraordinary_base_dao.py
- 打包程序报错: ModuleNotFoundError: No module named 'xx'
-? Python html解析
- . https://ea.jetbrains.com/browser/ea_reports/6074559 (PC01 PyCharm错误报告)
- ? 在PyCharm中, 注释自动生成author, date等信息
- ! 申报任务(declare), 密码修改(admin)
- ! web的数据库连接池, 不要把DbHelper单例化, 可以用localSession
- ? request 参数是否必填
- . 框架的Tutorial很全面, 可以一读

- ! pycharm自动生成注释(search for 'python integrated tools' , 'template')
- ?? service 里的router干嘛的?
- ?! 本地分支的信息不要上传到远程分支上, 要怎么做...
- ?? 数据库: 表嵌套该怎么设计: de_report_institution_person 和 de_report_sign_off
- ?? json --> python object

- ? python logging, 打包好了的程序也需要log
- ! crit 从word文档(或其他文档)自动生成dict代码(使用计算机容易识别的标记)
	- 读取源文档-->编写自动生成代码的脚本
	- python-documentation, 7.2.2. Saving structured data with json
- 复制, 清空word文档
------------------------------------------------------------------------------------------Wonders/Solved
-? sqlalchemy 使用
-? fastapi (框架使用)
- windows服务
-? 根据*.ini 文件动态配置
- UI保存2次, 怎么确保db中的数据不重复
-? github 新开工程, 原工程目录结构调整...
-. pyqt 显示子页面, 一定要加上self...
-? git 怎么删除远程的分支?(一下就push上去了...)
- !发布自己的Demo, 注意import前, 要 sys.path.append(rootPath)
- *? 如何一键切换[交付环境] 和 [测试环境]?
- ! learn some markdown on github
- ? session可以在merge了很多后, 一次性commit吗? sqlAlchemy的session是什么含义??
- python qt drag and drop
- qt for python: https://doc.qt.io/qtforpython/
------------------------------------------------------------------------------------------
!- 自动生成代码(dict) 的脚本
!- 用独立文件(config)来记录dict, 而不是在程序中
.- 一个属性对应一个方法的dict, 怎么方法会自动执行: 不加括号就不会自动执行
------------------------------------------------------------------------------------------

? 详细设计还不过关...
------------------------------------------------------------------------------------------
? 面向对象- 数据和操作封装在一处, 是什么含义...
------------------------------------------------------------------------------------------
? Python Generator 对象是什么...
-------------------------
结构问题?
- 心跳获取数据库信息, 刷新页面
	- 先做 任务 界面
-------------------------
与其他应用系统
信息交互情况
-------------------------
PageEvaluationOpinion.py 
word报告填充	mailmerge
----
----
界面填充?
-------------------------
git rm --cached <fileName> 	删除已经add, commit的文件管控, 不删除工作目录中的文件
-------------------------
MyQuest: Python Tutorial : Start
-------------------------
Python 命名规范
1.项目名称
首字母大写+大写式驼峰，
ProjectName

2.模块名和包名
全部小写+下划线驼峰
module_name  package_name

3.类名称，异常
首字母大写+大写式驼峰，
class ClassName:   ，ExceptionName

4.全局变量、常量
全部使用大写字母+下划线驼峰
GLOBAL_VAR_NAME，CONSTANT_NAME

5.方法名，函数名，其余变量，参数，实例
全部小写+下划线驼峰
method_name，function_name，instance_var_name, function_parameter_name, local_var_name

=======
------------------------------------------------------------------------------------------
今日日程: 2020-1-11
- ! GitHub guides: https://guides.github.com/
- ! web的数据库连接池, 不要把DbHelper单例化
- ? request 参数是否必填
- . 框架的Tutorial很全面, 可以一读
- ! 自动生成代码, 参考:
	- class PlatformUser(Base, BaseModel):
    __tablename__ = "platform_user"
    UserId = Column(String, name="user_id")
    UserName = Column(String, name="user_name")
    UserPW = Column(String, name="user_pw")
    lastLoginTime = Column(DateTime, name='last_login_time')
    lastLoginDevice = Column(String, name="last_login_device")
    lastChangeTime = Column(DateTime, name='last_change_time')
    lastChangeDevice = Column(String, name="last_change_device")
	
- ! pycharm自动生成注释(search for 'python integrated tools' , 'template')
- ?? service 里的router干嘛的?
- ?! 本地分支的信息不要上传到远程分支上, 要怎么做...
- ?? 数据库: 表嵌套该怎么设计: de_report_institution_person 和 de_report_sign_off
- ?? json --> python object
- fastapi 新项目, 参考 PythonWork/TopoService
	- * async in FastAPI
	- router 路由
	- 数据验证
	- 授权
- docx-tpl 进行合并
- 预览显示在widget中
	- 对每个sectionObj 指定一个orm_obj, 获取数据...
		- 先对Lv3的section设定, 然后是lv2, lv1...
	- 根据数据, 自动生成widget界面
- ! python logging, 打包好了的程序也需要log
- ! crit 从word文档(或其他文档)自动生成dict代码(使用计算机容易识别的标记)
	- 读取源文档-->编写自动生成代码的脚本
	- python-documentation, 7.2.2. Saving structured data with json
- 复制, 清空word文档
- 去专用机器上看申报系统界面(下午)
------------------------------------------------------------------------------------------
- ?好像没有互相import的做法...?
- ?python enum 判断相等
- !发布自己的Demo, 注意import前, 要 sys.path.append(rootPath)
- *? 如何一键切换[交付环境] 和 [测试环境]?
- ! learn some markdown on github
- ? session可以在merge了很多后, 一次性commit吗? sqlAlchemy的session是什么含义??
- python qt drag and drop
- qt for python: https://doc.qt.io/qtforpython/
------------------------------------------------------------------------------------------
!- 自动生成代码(dict) 的脚本
!- 用独立文件(config)来记录dict, 而不是在程序中
.- 一个属性对应一个方法的dict, 怎么方法会自动执行: 不加括号就不会自动执行
------------------------------------------------------------------------------------------

? 详细设计还不过关...
------------------------------------------------------------------------------------------
? 面向对象- 数据和操作封装在一处, 是什么含义...
------------------------------------------------------------------------------------------
? Python Generator 对象是什么...
-------------------------
结构问题?
- 心跳获取数据库信息, 刷新页面
	- 先做 任务 界面
-------------------------
与其他应用系统
信息交互情况
-------------------------
PageEvaluationOpinion.py 
word报告填充	mailmerge
----
----
界面填充?
-------------------------
git rm --cached <fileName> 	删除已经add, commit的文件管控, 不删除工作目录中的文件
-------------------------
MyQuest: Python Tutorial : Start
-------------------------
Python 命名规范
1.项目名称
首字母大写+大写式驼峰，
ProjectName

2.模块名和包名
全部小写+下划线驼峰
module_name  package_name

3.类名称，异常
首字母大写+大写式驼峰，
class ClassName:   ，ExceptionName

4.全局变量、常量
全部使用大写字母+下划线驼峰
GLOBAL_VAR_NAME，CONSTANT_NAME

5.方法名，函数名，其余变量，参数，实例
全部小写+下划线驼峰
method_name，function_name，instance_var_name, function_parameter_name, local_var_name

>>>>>>> 29f6e9023d0af7e1eec2602b054e1cb072eaa6f5
6.处理计数器外，不使用单字母命名